/*
 * Created on 2022-05-23 ( 10:00:37 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.mindia.carmind.entities;

import java.io.Serializable;
import java.util.List;
import javax.persistence.*;

/**
 * JPA entity class for "LogPregunta"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="log_pregunta", catalog="carmind" )
public class LogPregunta implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id ;

    //--- ENTITY DATA FIELDS 
    @Column(name="log_evaluacion", nullable=false)
    private Integer    logEvaluacion ;

    @Column(name="nota", length=200)
    private String     nota ;

    @Lob
    @Column(name="image")
    private byte[]     image ;

    @Column(name="descripcion", nullable=false, length=100)
    private String     descripcion ;

    @Column(name="tick_correcto")
    private Boolean    tickCorrecto ;

    @Column(name="tipo", nullable=false, length=50)
    private String     tipo ;

    @Column(name="crucial", nullable=false)
    private Boolean    crucial ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @ManyToOne
    @JoinColumn(name="tipo", referencedColumnName="codigo", insertable=false, updatable=false)
    private TipoPregunta tipoPregunta ; 

    @ManyToOne
    @JoinColumn(name="log_evaluacion", referencedColumnName="id", insertable=false, updatable=false)
    private LogEvaluacion logEvaluacion2 ; 

    @OneToMany(mappedBy="logPregunta")
    private List<LogOption> listOfLogOption ; 


    /**
     * Constructor
     */
    public LogPregunta() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    public void setLogEvaluacion( Integer logEvaluacion ) {
        this.logEvaluacion = logEvaluacion ;
    }
    public Integer getLogEvaluacion() {
        return this.logEvaluacion;
    }

    public void setNota( String nota ) {
        this.nota = nota ;
    }
    public String getNota() {
        return this.nota;
    }

    public void setImage( byte[] image ) {
        this.image = image ;
    }
    public byte[] getImage() {
        return this.image;
    }

    public void setDescripcion( String descripcion ) {
        this.descripcion = descripcion ;
    }
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setTickCorrecto( Boolean tickCorrecto ) {
        this.tickCorrecto = tickCorrecto ;
    }
    public Boolean getTickCorrecto() {
        return this.tickCorrecto;
    }

    public void setTipo( String tipo ) {
        this.tipo = tipo ;
    }
    public String getTipo() {
        return this.tipo;
    }

    public void setCrucial( Boolean crucial ) {
        this.crucial = crucial ;
    }
    public Boolean getCrucial() {
        return this.crucial;
    }

    //--- GETTERS FOR LINKS
    public TipoPregunta getTipoPregunta() {
        return this.tipoPregunta;
    } 

    public LogEvaluacion getLogEvaluacion2() {
        return this.logEvaluacion2;
    } 

    public List<LogOption> getListOfLogOption() {
        return this.listOfLogOption;
    } 

    //--- toString specific method
	@Override
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append(id);
        sb.append("|");
        sb.append(logEvaluacion);
        sb.append("|");
        sb.append(nota);
        // attribute 'image' not usable (type = byte[])
        sb.append("|");
        sb.append(descripcion);
        sb.append("|");
        sb.append(tickCorrecto);
        sb.append("|");
        sb.append(tipo);
        sb.append("|");
        sb.append(crucial);
        return sb.toString(); 
    } 

}
